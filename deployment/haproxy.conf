global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon
    maxconn 2048

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

    #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-bind-options no-sslv3 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-server-options no-sslv3 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
    option  forwardfor
    option  http-server-close
    retries 3
    timeout connect 5000s
    timeout client  50000s
    timeout server  50000s

    stats enable
    stats uri /stats
    stats realm Statistics
    stats auth haproxy:lj5Cv2ct5GFloFVpF1E3

	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend http-frontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/sites/<my certificate> # add multiple crt + certficiates here
    rspadd Strict-Transport-Security:\ max-age=31536000;\ includeSubDomains;\ preload
    redirect scheme https if !{ ssl_fc }
#    rsprep ^Set-Cookie:\ (.*) Set-Cookie:\ \1;\ Secure if secure
    default_backend http-backend

backend http-backend
# Useful if your behind basic auth
#    option httpchk OPTIONS / HTTP/1.0\r\nAuthorization:\ Basic\ <deadbeafbase64-username:password>
# Nginx should be running with ssl on port 444 for this to work
    server www-1 127.0.0.1:444 ssl verify none check
    server www-backup maintenance.maykinmedia.nl:80 backup
