
# https://www.nginx.com/blog/nginx-caching-guide/

{% for item in sites %}

proxy_cache_path /tmp/nginx_cache_{{ project_name }}_{{ target }}_{{ item.name }} levels=1:2 keys_zone=cache_{{ project_name }}_{{ target }}_{{item.name}}:500m;

server {
    listen 80;
    server_name {{ item.nginx_server_name }};
    rewrite ^ https://{{ item.nginx_server_name }}$request_uri?;
}


server {
    server_tokens off;
    listen 443 http2 ssl;
    server_name {{ item.nginx_server_name }};
    client_max_body_size 4G;
    # ssl_dhparam -> this has been disabled but note that IE11+Win7+Win8.1 don't work due to this

    ssl_protocols TLSv1.2 TLSv1.3; # Disable SSLv3, TLSv1.0 and TLSv1.1 for security reasons. Note that 1.3 only works on Buster
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    add_header Strict-Transport-Security max-age=15768000;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;

    ssl on;
    #ssl_certificate /etc/ssl/sites/ster_maykin_nl.cert;
    #ssl_certificate_key /etc/ssl/sites/ster_maykin_nl.key;
    ssl_certificate /etc/letsencrypt/live/{{ item.nginx_server_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ item.nginx_server_name }}/privkey;

    access_log {{ project_root}}/log/nginx/access-{{item.name}}.log;
    error_log {{ project_root }}/log/nginx/error-{{item.name}}.log info;

    # Check if maintenance mode is active
    set $maintenance off;
    if (-f {{ project_root }}/maintenance.html ) {
        set $maintenance on;
    }
    if ($maintenance = on) {
        return 503;
    }

    location /static/ {
        expires 15m;
        alias {{ nginx_static_dir }};
    }

    location /media/ {
        # expires 1d;
        alias {{ project_root }}/media/{{ item.name }};
    }
    location / {
        auth_basic "Acceptance environment";
        auth_basic_user_file {{ project_root }}/deployment/htpasswd;

        # Setup var defaults. Explicitly set this flag to an empty string to enable caching
        set $no_cache "1";
        # If non GET/HEAD, don't cache & mark user as uncacheable for 1 second via cookie
        if ($request_method !~ ^(GET|HEAD)$) {
            set $no_cache "1";
        }
        # Drop no cache cookie if need be
        # (for some reason, add_header fails if included in prior if-block)
        if ($no_cache = "1") {
            add_header Set-Cookie "_mcnc=1; Max-Age=2; Path=/";
            add_header X-Microcachable "0";
        }
        # Bypass cache if no-cache cookie is set
        if ($http_cookie ~* "_mcnc") {
            set $no_cache "1";
        }
        # Bypass cache if flag is set
        proxy_no_cache $no_cache;
        proxy_cache_bypass $no_cache;
        proxy_cache_bypass $cookie_sessionid; # Don't cache if we're authenticated
        proxy_cache cache_{{ project_name }}_{{ target }}_{{item.name}};
        proxy_cache_valid 200 1m;
        proxy_cache_key $scheme$host$request_method$request_uri;
        proxy_cache_use_stale error updating timeout http_500 http_502 http_503 http_504;
	proxy_cache_background_update on;
	proxy_cache_lock on;

        proxy_pass_header Server;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;

        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass_request_headers on;
        proxy_pass http://127.0.0.1:{{ item.uwsgi_port }};
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root {{ project_root }}/src/{{ project_src_dir }}/templates/;
    }

    # Maintenance mode
    error_page 503 @maintenance;
    location @maintenance {
        root {{ project_root }};
        rewrite ^(.*)$ /maintenance.html break;
    }
}

{% endfor %}
