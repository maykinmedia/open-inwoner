# generated by datamodel-codegen:
#   filename:  bericht.json
#   timestamp: 2024-10-07T14:27:37+00:00

from __future__ import annotations

from datetime import date
from typing import List, Optional

from pydantic import AnyUrl, BaseModel, Field, constr
from typing_extensions import Literal


class Identificatie(BaseModel):
    type: Literal["bsn", "kvk"] = "bsn"
    value: Optional[constr(pattern=r"^[0-9]+$")] = None  # noqa: F722


class Bericht(BaseModel):
    object_uuid: str = Field(..., description="UUID van het onderliggende object")
    onderwerp: str = Field(..., description="Onderwerp van het bericht")
    berichtTekst: str = Field(
        ...,
        description="Tekst van het bericht. Mag URL bevatten en /r/n voor newline. Geen verdere opmaak mogelijk.",
    )
    publicatiedatum: date = Field(
        ...,
        description="Tijdstip van verwerken van het bericht of de PublicatieDatum indien deze is ingevuld",
    )
    einddatumHandelingstermijn: Optional[date] = Field(
        None, description="Termijn waarbinnen de geadresseerde moet reageren"
    )
    referentie: Optional[str] = Field(None, description="TODO")
    handelingsperspectief: Optional[
        Literal["betalen", "informatie verstrekken", "informatie ontvangen", "TODO"]
    ] = Field(None, description="TODO: Benodigde reactie van de geadresseerde")
    geopend: bool = Field(
        ...,
        description="Het bericht is door de geadresseerde geopend of nog niet geopend",
    )
    berichtType: Literal[
        "notificatie", "betaalverzoek", "uitnodiging", "verzoek", "TODO"
    ] = Field(..., description="Type bericht")
    identificatie: Identificatie = Field(..., description="TODO")
    bijlages: List[AnyUrl] = Field(
        ...,
        description="TODO",
        examples=[["https://documenten.nl/api/v1/enkelvoudiginformatieobjecten/1"]],
    )
