# Generated by Django 4.2.11 on 2024-07-08 20:10

from django.db import migrations

SHARED_FIELDS = (
    "enabled",
    "oidc_rp_client_id",
    "oidc_rp_client_secret",
    "oidc_rp_sign_algo",
    "oidc_rp_scopes_list",
    "oidc_op_discovery_endpoint",
    "oidc_op_jwks_endpoint",
    "oidc_op_authorization_endpoint",
    "oidc_op_token_endpoint",
    "oidc_token_use_basic_auth",
    "oidc_op_user_endpoint",
    "oidc_rp_idp_sign_key",
    "oidc_op_logout_endpoint",
    "oidc_use_nonce",
    "oidc_nonce_size",
    "oidc_state_size",
    "oidc_keycloak_idp_hint",
    "userinfo_claims_source",
)


def forwards(apps, _):
    """
    Copy over configuration from the legacy digid-eh generics oidc app.

    Configuration is copied to digid_eherkenning.oidc models, which will be subclassed
    as proxy models to alter Python behaviour.
    """
    # legacy models
    OpenIDConnectDigiDConfig = apps.get_model(
        "digid_eherkenning_oidc_generics_legacy",
        "OpenIDConnectDigiDConfig",
    )
    OpenIDConnectEHerkenningConfig = apps.get_model(
        "digid_eherkenning_oidc_generics_legacy",
        "OpenIDConnectEHerkenningConfig",
    )

    # new models
    DigiDConfig = apps.get_model(
        "digid_eherkenning_oidc_generics",
        "DigiDConfig",
    )
    EHerkenningConfig = apps.get_model(
        "digid_eherkenning_oidc_generics", "EHerkenningConfig"
    )

    if legacy_digid := OpenIDConnectDigiDConfig.objects.first():
        digid_create_kwargs = {
            field_name: getattr(legacy_digid, field_name)
            for field_name in SHARED_FIELDS
        } | {"bsn_claim": legacy_digid.identifier_claim_name}
        DigiDConfig.objects.create(**digid_create_kwargs)

    if legacy_eh := OpenIDConnectEHerkenningConfig.objects.first():
        eh_create_kwargs = {
            field_name: getattr(legacy_eh, field_name) for field_name in SHARED_FIELDS
        } | {"legal_subject_claim": legacy_eh.identifier_claim_name}
        EHerkenningConfig.objects.create(**eh_create_kwargs)


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0075_user_verified_email"),
        # Requires the renamed tables
        (
            "digid_eherkenning_oidc_generics_legacy",
            "0003_alter_openidconnectdigidconfig_table_and_more",
        ),
        # Requires the initial tables to be created
        (
            "digid_eherkenning_oidc_generics",
            "0009_remove_digidconfig_oidc_exempt_urls_and_more",
        ),
    ]

    operations = [
        # Make a backup, we don't support reversing.
        migrations.RunPython(forwards, migrations.RunPython.noop),
    ]
